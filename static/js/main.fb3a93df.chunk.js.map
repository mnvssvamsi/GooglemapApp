{"version":3,"sources":["components/Navbar/Navbar.js","components/Modal/ReviewModal/ReviewModal.js","components/Modal/ReviewModal/DisplayReview/DisplayReview.js","components/Modal/Modal.js","components/Map.js","Store/actions/auth.js","Store/actions/actionTypes.js","containers/Auth/Auth.js","components/Welcome/Welcome.js","Store/actions/welcome.js","components/Navbar/Logout/Logout.js","App.js","Store/reducers/utility.js","Store/reducers/authReducer.js","Store/reducers/welcomeReducer.js","index.js"],"names":["Navbar","console","log","this","props","className","isAuthenticated","to","Component","connect","state","auth","token","Modal","React","memo","useState","review","setReview","submitted","setSubmitted","Fragment","close","onClick","onSubmit","e","preventDefault","reviewData","reviews","axios","post","then","response","catch","error","value","onChange","target","type","DisplayReview","setReviews","writeReview","setWriteReview","useEffect","get","res","data","loadedData","key","push","id","err","map","reviewElement","reviewSelected","setReviewSelected","mapContainerStyle","height","width","center","lat","lng","options","zoomControl","libraries","Map","useLoadScript","isLoaded","loadError","markers","setMarkers","selected","setSelected","onMapClick","useCallback","current","latLng","time","Date","mapRef","useRef","onMapLoad","zoom","onLoad","marker","position","authSuccess","userId","idToken","logout","localStorage","removeItem","checkAuthTimeout","expTime","dispatch","setTimeout","onAuth","email","password","isSignUp","authData","returnSecureToken","url","expirationDate","getTime","expiresIn","setItem","localId","actions","setEmail","setPassword","emailError","setEmailError","passwordError","setPasswordError","isSignup","setIsSignup","test","submitHandler","placeholder","name","pattern","style","color","minLength","disabled","onName","userData","nameSuccess","names","nameFail","setName","setSubmited","required","Logout","onLogout","App","onTryAutoSignUp","routes","path","exact","component","Auth","Welcome","withRouter","getItem","updateObject","oldObject","updatedProperties","initialState","loading","authStart","action","authFail","authLogout","reducer","userName","nameStart","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","rootReducer","combineReducers","AuthReducer","welcome","welcomeReducer","store","createStore","applyMiddleware","thunk","app","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.fb3a93df.chunk.js","sourcesContent":["import React, { Component } from \"react\";\r\nimport \"./Navbar.css\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { connect } from \"react-redux\";\r\nclass Navbar extends Component {\r\n  render() {\r\n    console.log(\"nav\", this.props);\r\n    return (\r\n      <nav>\r\n        <ul className=\"navbar\">\r\n          <ul className=\"navbar-home\">\r\n            {!this.props.isAuthenticated ?\r\n              <li className=\"NavigationItem\">\r\n                <Link to=\"/\">Login</Link>\r\n              </li>\r\n              :\r\n              <li className=\"NavigationItem\">\r\n                <Link to=\"/logout\">Logout</Link>\r\n              </li>\r\n            }\r\n          </ul>\r\n        </ul>\r\n      </nav>\r\n    );\r\n  }\r\n}\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    isAuthenticated: state.auth.token !== null\r\n  };\r\n};\r\nexport default connect(mapStateToProps)(Navbar);\r\n","import React, { useState } from \"react\";\r\nimport \"./ReviewModal.css\";\r\nimport axios from 'axios'\r\n\r\n\r\nconst Modal = React.memo((props) => {\r\n  console.log(\"reviewModal\", props);\r\n  const [review, setReview] = useState('')\r\n  const[submitted, setSubmitted] = useState(false)\r\n\r\n  const reviewSubmitHander = (e) => {\r\n    e.preventDefault();\r\n    const reviewData = {\r\n      reviews: review\r\n    }\r\n\r\n    let api = 'https://map-building-7f022.firebaseio.com/reviews.json'\r\n    axios.post(api, reviewData)\r\n      .then(response => {\r\n        // console.log(\"post review\",response)\r\n      }).catch(error => {\r\n        console.log(error)\r\n      })\r\n      setSubmitted(true)\r\n  }\r\n\r\n  return (\r\n    <React.Fragment>\r\n      {submitted && props.close()}\r\n      <div className=\"backdrop\" onClick={props.close} />\r\n      <div className=\"review-modal\">\r\n        <form onSubmit={reviewSubmitHander}>\r\n          <label className='text-label'>Enter your review</label>\r\n          <textarea className='text' value={review}\r\n            onChange={(e) => { setReview(e.target.value) }}\r\n          />\r\n          <input className='review-submit' type='submit' />\r\n        </form>\r\n        <div className=\"review-modal__actions\">\r\n          <button type=\"button\" onClick={props.close}>\r\n            X\r\n          </button>\r\n        </div>\r\n      </div>\r\n    </React.Fragment>\r\n  );\r\n});\r\n\r\nexport default Modal;\r\n","import React, { Fragment, useEffect, useState } from \"react\";\r\nimport axios from 'axios'\r\nimport ReviewModal from '../ReviewModal'\r\nimport './DisplayReview.css'\r\n\r\nconst DisplayReview = (props) => {\r\n\r\n  const [reviews, setReviews] = useState([])\r\n  const[writeReview, setWriteReview] = useState(false)\r\n\r\n  const reviewHandler= ()=> {\r\n    \r\n    setWriteReview(true)\r\n  }\r\n const  reviewCloseHandler=()=> {\r\n    setWriteReview(false)\r\n  }\r\n\r\n  useEffect(() => {\r\n    axios.get('https://map-building-7f022.firebaseio.com/reviews.json')\r\n      .then(response => {\r\n        let res = response.data;\r\n        let loadedData = [];\r\n        for (let key in res) {\r\n          loadedData.push({\r\n            id: key,\r\n            review: res[key].reviews\r\n          })\r\n        }\r\n        setReviews(loadedData)\r\n      })\r\n      .catch(err => {\r\n        console.log(err)\r\n      })\r\n  }, [])\r\n  let reviewData = reviews.map(reviewElement => {\r\n    return <p className='review' key={reviewElement.id}>{reviewElement.review}</p>\r\n  })\r\n  return (\r\n    <Fragment>\r\n      <div className=\"display-review-modal\">\r\n      {writeReview && <ReviewModal close= {reviewCloseHandler} />}\r\n        <button onClick={reviewHandler} className='write-review'>Write a review</button>\r\n        {reviewData}\r\n        <div className=\"display-review-modal__actions\">\r\n          <button type=\"button\" onClick={props.close}>\r\n            X\r\n          </button>\r\n        </div>\r\n      </div>\r\n    </Fragment>\r\n  )\r\n}\r\n\r\nexport default DisplayReview","import React, { useState } from \"react\";\r\nimport \"./Modal.css\";\r\nimport DisplayReview from \"./ReviewModal/DisplayReview/DisplayReview\";\r\nconst Modal = React.memo((props) => {\r\n\r\n  const [reviewSelected, setReviewSelected] =useState(false)\r\n\r\n  console.log(\"modal\", props);\r\n\r\n  //  .then(res => console.log(res))\r\n\r\n  const reviewHandler= ()=> {\r\n    setReviewSelected(true)\r\n  }\r\n const  reviewCloseHandler=()=> {\r\n    setReviewSelected(false)\r\n  }\r\n  return (\r\n    <React.Fragment>\r\n      {reviewSelected ? <DisplayReview close= {reviewCloseHandler}/> : null}\r\n      {/* <div className=\"backdrop\" onClick={props.close} /> */}\r\n      <div className=\"error-modal\">\r\n        <button className='reviewButton' onClick={reviewHandler} >Reviews</button>\r\n        <div className=\"error-modal__actions\">\r\n          <button type=\"button\" onClick={props.close}>\r\n            X\r\n          </button>\r\n        </div>\r\n      </div>\r\n    </React.Fragment>\r\n  );\r\n});\r\n\r\nexport default Modal;\r\n","import React, { useState } from \"react\";\r\nimport { GoogleMap, useLoadScript, Marker } from \"@react-google-maps/api\";\r\nimport Navbar from './Navbar/Navbar'\r\nimport Modal from './Modal/Modal'\r\n\r\n// import usePlacesAutocomplete, {\r\n//   getGeocode,\r\n//   getLatLng,\r\n// } from \"use-places-autocomplete\";\r\n// import {\r\n//   Combobox,\r\n//   ComboboxInput,\r\n//   ComboboxPopover,\r\n//   ComboboxList,\r\n//   ComboboxOption,\r\n// } from \"@reach/combobox\";\r\n\r\n\r\nconst mapContainerStyle = {\r\n  height: \"100vh\",\r\n  width: \"100vw\",\r\n};\r\nconst center = {\r\n  lat: 16.710661,\r\n  lng: 81.095245,\r\n};\r\n\r\nconst options = {\r\n  zoomControl: true\r\n}\r\nconst libraries = [\"places\"]\r\n\r\nfunction Map() {\r\n  const { isLoaded, loadError } = useLoadScript({\r\n    // googleMapsApiKey: process.env.REACT_APP_GOOGLE_MAPS_API_KEY,\r\n    libraries\r\n  });\r\n  const [markers, setMarkers] = useState([]);\r\n  const [selected, setSelected] = React.useState(null);\r\n\r\n  const onMapClick = React.useCallback((e) => {\r\n    setMarkers((current) => [\r\n      ...current,\r\n      {\r\n        lat: e.latLng.lat(),\r\n        lng: e.latLng.lng(),\r\n        time: new Date(),\r\n      },\r\n    ]);\r\n  }, []);\r\n\r\n  \r\n\r\n  const mapRef = React.useRef();\r\n  const onMapLoad = React.useCallback((map) => {\r\n    mapRef.current = map;\r\n  }, []);\r\n\r\n\r\n  const  closeHandler = ()=> {\r\n      setSelected(null)\r\n  }\r\n\r\n  if (loadError) return \"Error\";\r\n  if (!isLoaded) return \"Loading...\";\r\n  // console.log(selected)\r\n\r\n  return (\r\n    <div>\r\n\r\n      <Navbar />\r\n      <GoogleMap\r\n        id=\"map\"\r\n        mapContainerStyle={mapContainerStyle}\r\n        zoom={8}\r\n        center={center}\r\n        options={options}\r\n        onClick={onMapClick}\r\n        onLoad={onMapLoad}\r\n      >\r\n        {markers.map((marker) => (\r\n          <Marker\r\n            key={`${marker.lat}-${marker.lng}`}\r\n            position={{ lat: marker.lat, lng: marker.lng }}\r\n            onClick={() => {\r\n              setSelected(marker);\r\n            }}\r\n          />\r\n        ))}\r\n        {selected ? <Modal lat= {selected.lat} lng={selected.lng}  close={closeHandler}  /> : null}\r\n      </GoogleMap>\r\n    </div>\r\n  );\r\n}\r\nexport default Map","import * as actionTypes from './actionTypes';\r\nimport axios from 'axios';\r\nexport const authStart = ()=>{\r\n    return {\r\n        type: actionTypes.AUTH_START\r\n    }\r\n};\r\n\r\nexport const authSuccess = (token, userId)=>{\r\n    return {\r\n        type: actionTypes.AUTH_SUCCESS,\r\n        idToken: token,\r\n        userId: userId\r\n    }\r\n};\r\n\r\nexport const authFail = (error)=>{\r\n    return {\r\n        type: actionTypes.AUTH_FAIL,\r\n        error: error\r\n    }\r\n};\r\n\r\nexport const logout =()=> {\r\n    localStorage.removeItem('token');\r\n    localStorage.removeItem('expirationDate')\r\n    localStorage.removeItem('userId')\r\n    return  {\r\n        type:actionTypes.AUTH_LOGOUT\r\n    }\r\n}\r\n export const checkAuthTimeout =(expTime)=>{\r\n    return dispatch => {\r\n        setTimeout(()=> {\r\n            dispatch(logout())\r\n         }, expTime*1000)\r\n    }\r\n }\r\n\r\nexport const auth = (email, password, isSignUp)=>{\r\n    return (dispatch)=>{\r\n        dispatch(authStart());\r\n        const authData ={\r\n            email :email,\r\n            password:password,\r\n            returnSecureToken: true\r\n        }\r\n        let  url ='https://identitytoolkit.googleapis.com/v1/accounts:signUp?key=AIzaSyCheBZOjnQsPJsu3hE6a3Sjgdp07_GwsjM'\r\n        if(!isSignUp){\r\n            url ='https://identitytoolkit.googleapis.com/v1/accounts:signInWithPassword?key=AIzaSyCheBZOjnQsPJsu3hE6a3Sjgdp07_GwsjM'\r\n        }\r\n        axios.post(url, authData)\r\n        .then (res => {\r\n            console.log(res)\r\n            const expirationDate = new Date(new Date().getTime()+res.data.expiresIn*1000)\r\n            localStorage.setItem('token', res.data.idToken);\r\n            localStorage.setItem('expirationDate', expirationDate)\r\n            localStorage.setItem('userId',res.data.localId)\r\n            dispatch(authSuccess(res.data.idToken, res.data.localId))\r\n            dispatch(checkAuthTimeout(res.data.expiresIn))\r\n        })\r\n        .catch(err=> {\r\n            console.log(err)\r\n            dispatch(authFail(err.response.data.error))\r\n        })\r\n    }\r\n};\r\n\r\nexport const authCheckState =()=> {\r\n    return dispatch => {\r\n        const token = localStorage.getItem('token');\r\n        if(!token){\r\n            dispatch(logout());\r\n        }\r\n        else{\r\n            const expirationDate = new Date(localStorage.getItem('expirationDate'));\r\n            if(expirationDate <= new Date()){\r\n                dispatch(logout());\r\n            }\r\n            else {\r\n                const userId= localStorage.getItem('userId');\r\n                dispatch(authSuccess(token, userId));\r\n                dispatch(checkAuthTimeout(expirationDate.getTime()- new Date().getTime()/1000));\r\n            }\r\n        }\r\n    }\r\n}","export const AUTH_START= 'AUTH_START'; \r\nexport const AUTH_SUCCESS= 'AUTH_SUCCESS'; \r\nexport const AUTH_FAIL= 'AUTH_FAIL'; \r\nexport const AUTH_LOGOUT= 'AUTH_LOGOUT'; \r\n\r\nexport const NAME_START ='NAME_START';\r\nexport const NAME_SUCCESS ='NAME_SUCCESS';\r\nexport const NAME_FAIL ='NAME_FAIL';\r\n\r\nexport const FETCH_NAME_START ='FETCH_NAME_START';\r\nexport const FETCH_NAME_SUCCESS ='FETCH_NAME_SUCCESS';\r\nexport const FETCH_NAME_FAIL ='FETCH_NAME_FAIL';","import React, { Fragment, useState } from 'react'\r\nimport './Auth.css'\r\nimport { connect } from 'react-redux'\r\nimport * as actions from '../../Store/actions/index';\r\nimport Navbar from '../../components/Navbar/Navbar';\r\nimport { Redirect } from 'react-router-dom';\r\n\r\n\r\nconst Auth = (props) => {\r\n    const [email, setEmail] = useState('')\r\n    const [password, setPassword] = useState('')\r\n    const [emailError, setEmailError] = useState('')\r\n    const [passwordError, setPasswordError] = useState('')\r\n    const [isSignup, setIsSignup] = useState(true)\r\n\r\n    // const[authRedirect,setAuthRedirect]=  useState('')\r\n    // const [errorMessage, setErrorMessage] =useState(null)\r\n\r\n    // console.log(\"auth\", props)\r\n\r\n    const switchAuthModeHandler = () => {\r\n        setIsSignup(!isSignup)\r\n    }\r\n\r\n    const submitHandler = (e) => {\r\n        e.preventDefault();\r\n        props.onAuth(email, password, isSignup)\r\n        var emailRegx = /[a-z0-9._%+-]+@[a-z0-9.-]+\\.[a-z]{2,}$/\r\n        if (emailRegx.test(email)) {\r\n            setEmailError('')\r\n        } else {\r\n            setEmailError('please enter a valid email')\r\n            return\r\n        }\r\n        var passwordText = password;\r\n        // var passwordRegx = /^{10}$/;\r\n        if (passwordText === '') {\r\n            setPasswordError('please enter a valid password')\r\n            return\r\n        }\r\n        else {\r\n            setPasswordError('')\r\n        }\r\n\r\n        // console.log(\"history\", props.history)\r\n\r\n    }\r\n    return (\r\n        <Fragment>\r\n            <Navbar />\r\n            {props.isAuthenticated && <Redirect to='/names' />}\r\n            <div className='ContactData'>\r\n                {/* {errorMessage && (<p>{props.error.message}</p>)} */}\r\n                <form onSubmit={(e) => submitHandler(e)} >\r\n                    <div className=\"Input\">\r\n                        <input className=\"InputElement\"\r\n                            type=\"email\" placeholder=\" E-Mail\" name='email'\r\n                            pattern=\"[a-z0-9._%+-]+@[a-z0-9.-]+\\.[a-z]{2,}$\"\r\n                            onChange={(e) => {\r\n                                setEmailError('')\r\n                                setEmail(e.target.value)\r\n                            }}\r\n                            value={email}\r\n                        //  required\r\n                        />\r\n                        {emailError && <p className='error' style={{ color: 'red' }}>{emailError}</p>}\r\n                    </div>\r\n                    <div className=\"Input\">\r\n                        <input className=\"InputElement\"\r\n                            type=\"password\" placeholder=\" Password\" name='password'\r\n                            // pattern=\"[a-z0-9._%+-]+@[a-z0-9.-]+\\.[a-z]{2,}$\"\r\n                            onChange={(e) => {\r\n                                setPasswordError('')\r\n                                setPassword(e.target.value)\r\n                            }}\r\n                            value={password} minLength='6'\r\n                        //  required\r\n                        />\r\n                        {passwordError && <p className='error' style={{ color: 'red' }}>{passwordError}</p>}\r\n                    </div>\r\n                    <div>\r\n                        <button className=\"Button\" disabled=\"\">SUBMIT</button>\r\n                    </div>\r\n                </form>\r\n                <button onClick={switchAuthModeHandler}>\r\n                    SWITCH TO {isSignup ? \"SIGN IN\" : \"REGISTER\"}\r\n                </button>\r\n            </div>\r\n        </Fragment>\r\n    )\r\n}\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        error: state.auth.error,\r\n        token: state.auth.token,\r\n        isAuthenticated: state.auth.token !== null\r\n    }\r\n}\r\n\r\n\r\n// dispatching here via props\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        onAuth: (email, password, isSignUp) =>\r\n            dispatch(actions.auth(email, password, isSignUp))\r\n    }\r\n}\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Auth)\r\n","import React, { useState } from 'react'\r\nimport './Welcome.css'\r\nimport * as actions from '../../Store/actions/index'\r\nimport { connect } from 'react-redux'\r\nimport Navbar from '../Navbar/Navbar'\r\nimport {Redirect} from 'react-router-dom'\r\n const Welcome = (props) => {\r\n    const[name,setName] =useState('')\r\n    const[submitted, setSubmited] =useState(false)\r\n\r\n    // console.log(\"welcome\", props.token)\r\n\r\n    const formSubmitHandler =(e)=> {\r\n        e.preventDefault();\r\n        props.onName(name, props.token);\r\n        setSubmited(true)\r\n    }\r\n\r\n    return (\r\n        <div className='welcome' >\r\n            {submitted && <Redirect to='/names/maps' />}\r\n            <Navbar />\r\n            <h2>Welcome to Maps</h2>\r\n            <p>Please enter your name here before checking the maps</p>\r\n            <form className='form' onSubmit= {formSubmitHandler} >\r\n            <input className='name'\r\n             type='text'  value={name}\r\n            placeholder= 'Enter your name' required \r\n            onChange= {(e)=>{\r\n                setName(e.target.value)\r\n            }}\r\n            />\r\n            <input className='submit' type='submit' />\r\n            </form>\r\n            {/* {name} */}\r\n        </div>\r\n    )\r\n}\r\n\r\nconst mapStateToProps = state =>{\r\n    return {\r\n       token: state.auth.token \r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        onName: (name, token)=> dispatch(actions.userName(name, token))\r\n    }\r\n}\r\n\r\n\r\nexport default connect(mapStateToProps,mapDispatchToProps) (Welcome)","import * as actionTypes from './actionTypes';\r\nimport axios from 'axios';\r\n\r\n\r\nexport const nameStart = () => {\r\n    return {\r\n        type: actionTypes.NAME_START\r\n    };\r\n};\r\n\r\nexport const nameSuccess = ( userData) => {\r\n    return {\r\n        type: actionTypes.NAME_SUCCESS,\r\n        name: userData\r\n        // orderId: id,\r\n        // orderData: orderData\r\n    };\r\n};\r\n\r\nexport const nameFail = ( error ) => {\r\n    return {\r\n        type: actionTypes.NAME_FAIL,\r\n        error: error\r\n    };\r\n}\r\n        // getting data from Welcome file and storing as userData and passing it to axios to post.\r\nexport const userName = ( name, token ) => {\r\n    console.log(\"action\",token)\r\n    const userData= {\r\n        name: name\r\n    }\r\n    return dispatch => {\r\n        dispatch( nameStart());\r\n        axios.post('https://map-building-7f022.firebaseio.com/names.json?auth=' + token, userData)\r\n            .then( response => {\r\n                console.log( response.data );\r\n                dispatch( nameSuccess( response.data.names, userData ) );\r\n            } )\r\n            .catch( error => {\r\n                dispatch( nameFail( error ) );\r\n            } );\r\n    };\r\n};\r\n\r\n// export const fetchNameSuccess = (  ) => {\r\n//     return {\r\n//         type: actionTypes.FETCH_NAME_SUCCESS,\r\n//     };\r\n// };\r\n\r\n// export const fetchNameFail = ( error ) => {\r\n//     return {\r\n//         type: actionTypes.FETCH_NAME_FAIL,\r\n//         error: error\r\n//     };\r\n// };\r\n\r\n// export const fetchNameStart = () => {\r\n//     return {\r\n//         type: actionTypes.FETCH_NAME_START\r\n//     };\r\n// };\r\n\r\n// export const fetchName = (token, userId) => {\r\n//     return dispatch => {\r\n//         dispatch(fetchNameStart());\r\n//         // const queryParams = '?auth=' + token + '&orderBy=\"userId\"&equalTo=\"' + userId + '\"';\r\n//         axios.get( 'https://map-building-7f022.firebaseio.com/names.json')\r\n//             .then( res => {\r\n//                 console.log(res)\r\n\r\n//             } )\r\n//             .catch( err => {\r\n//                 dispatch(fetchNameFail(err));\r\n//             } );\r\n//     };\r\n// };","import React, { Component } from 'react'\r\nimport * as actions from '../../../Store/actions/index';\r\n \r\nimport {Redirect} from 'react-router-dom'\r\nimport { connect } from 'react-redux';\r\n\r\nclass Logout extends Component {\r\n\r\n    componentDidMount(){\r\n        this.props.onLogout();\r\n    }\r\n\r\n    render() {\r\n        return <Redirect to='/' />\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps= dispatch=>{\r\n    return {\r\n        onLogout: ()=> dispatch(actions.logout())\r\n    }\r\n}\r\n\r\nexport default connect(null,mapDispatchToProps)(Logout)","import React, { Component } from 'react'\nimport { Switch, Route, withRouter, Redirect } from 'react-router-dom'\nimport Map from './components/Map'\nimport Auth from './containers/Auth/Auth'\nimport Welcome from './components/Welcome/Welcome'\nimport Logout from './components/Navbar/Logout/Logout'\nimport * as actions from './Store/actions/index'\nimport { connect } from 'react-redux'\n\n\nclass App extends Component {\n\n\n  componentDidMount() {\n    this.props.onTryAutoSignUp();\n  }\n\n  render() {\n    let routes = (\n      <Switch>\n        <Route path='/' exact component={Auth} />\n        <Redirect to='/' />\n      </Switch>\n    )\n    if (this.props.isAuthenticated) {\n      routes = (\n        <Switch>\n          <Route path='/names' exact component={Welcome} />\n          <Route path='/names/maps' component={Map} />\n          <Route path='/logout' component={Logout} />\n          <Route path='/' exact component={Auth} />\n          <Redirect to='/' />\n        </Switch>\n      )\n    }\n    return (\n      <div>\n        {routes}\n      </div>\n    )\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {\n    isAuthenticated: state.auth.token !== null\n  }\n}\n\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    onTryAutoSignUp: () => dispatch(actions.authCheckState())\n  }\n}\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(App))\n","export const updateObject = (oldObject, updatedProperties) => {\r\n    return {\r\n      ...oldObject,\r\n      ...updatedProperties\r\n    };\r\n  };\r\n  ","import * as actionTypes from \"../actions/actionTypes\";\r\nimport { updateObject } from \"./utility\";\r\n\r\nconst initialState = {\r\n  token: null,\r\n  userId: null,\r\n  error: null,\r\n  loading: false\r\n};\r\n//action values getting from auth in actions\r\nconst authStart = (state, action) => {\r\n  return updateObject(state, { error: null, loading: true });\r\n};\r\n// check token\r\nconst authSuccess = (state, action) => {\r\n  return updateObject(state, {\r\n    token: action.idToken,\r\n    userId: action.userId,\r\n    error: null,\r\n    loading: false\r\n  });\r\n};\r\n\r\nconst authFail = (state, action) => {\r\n  return updateObject(state, {\r\n    error: action.error,\r\n    loading: false\r\n  });\r\n};\r\nconst authLogout = (state, action) => {\r\n  return updateObject(state,\r\n    {\r\n      token: null,\r\n      userId: null\r\n    });\r\n};\r\nconst reducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case actionTypes.AUTH_START:\r\n      return authStart(state, action);\r\n    case actionTypes.AUTH_SUCCESS:\r\n      return authSuccess(state, action);\r\n    case actionTypes.AUTH_FAIL:\r\n      return authFail(state, action);\r\n    case actionTypes.AUTH_LOGOUT:\r\n      return authLogout(state, action);\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default reducer;\r\n","import * as actionTypes from '../actions/actionTypes'\r\nimport {updateObject} from './utility';\r\n\r\nconst initialState = {\r\n    token : null,\r\n    error: null,\r\n    loading: false,\r\n    userName : null\r\n}\r\n\r\nconst nameStart = ( state, action ) => {\r\n    return updateObject( state, { error: null, loading: true } );\r\n};\r\n\r\nconst nameSuccess = (state, action) => {\r\n    return updateObject( state, { \r\n        token: action.idToken,\r\n        userId: action.userId,\r\n        error: null,\r\n        loading: false\r\n     } );\r\n};\r\n\r\nconst nameFail = (state, action) => {\r\n    return updateObject( state, {\r\n        error: action.error,\r\n        loading: false\r\n    });\r\n};\r\n// const fetchNameStart = (state, action) => {\r\n//     return updateObject( state, {\r\n//         error: action.error,\r\n//         loading: false\r\n//     });\r\n// };\r\n// const fetchNameSucces = (state, action) => {\r\n//     return updateObject( state, {\r\n//         error: action.error,\r\n//         loading: false\r\n//     });\r\n// };\r\n// const fetchNameFail = (state, action) => {\r\n//     return updateObject( state, {\r\n//         error: action.error,\r\n//         loading: false\r\n//     });\r\n// };\r\n\r\n\r\n const reducer =(state= initialState, action)=> {\r\n    switch(action.type){\r\n        case actionTypes.NAME_START : \r\n        return nameStart(state,action);\r\n        case actionTypes.NAME_SUCCESS : \r\n        return nameSuccess(state,action);\r\n        case actionTypes.NAME_FAIL : \r\n        return nameFail(state,action);\r\n        // case actionTypes.FETCH_NAME_START : \r\n        // return fetchNameStart(state,action);\r\n        // case actionTypes.FETCH_NAME_SUCCESS : \r\n        // return fetchNameSucces(state,action);\r\n        // case actionTypes.FETCH_NAME_FAIL : \r\n        // return fetchNameFail(state,action);\r\n        default:return state;\r\n    }\r\n}\r\n\r\nexport default reducer;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport AuthReducer from './Store/reducers/authReducer'\nimport welcomeReducer from './Store/reducers/welcomeReducer'\nimport { BrowserRouter } from \"react-router-dom\";\nimport { Provider } from \"react-redux\";\nimport { createStore, applyMiddleware, compose, combineReducers } from \"redux\";\nimport thunk from \"redux-thunk\";\n\n// import * as serviceWorker from './serviceWorker';\n\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\n\nconst rootReducer = combineReducers({\n  auth: AuthReducer,\n  welcome: welcomeReducer\n})\n\nconst store = createStore(\n  rootReducer,\n  composeEnhancers(applyMiddleware(thunk))\n);\nconst app = (\n  <Provider store={store}>\n    <BrowserRouter>\n      <App />\n    </BrowserRouter>\n  </Provider>\n);\nReactDOM.render(app,document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\n// serviceWorker.unregister();\n "],"sourceRoot":""}